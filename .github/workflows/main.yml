name: Javascript CI (Volta + pnpm via volta)
on:
  - push
permissions:
  actions: write
  checks: write
  contents: read
  issues: write
  pull-requests: write
  id-token: write
jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Volta
        uses: ./.github/actions/volta-setup
      - run: volta run pnpm test
  infra:
    needs:
      - test
    uses: mechwire/tf-state-remote-backend/.github/workflows/tf.yml@main
    secrets: inherit
  deploy:
    needs:
      - infra
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Volta
        uses: ./.github/actions/volta-setup
      - run: volta run pnpm build
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID}}:role/${{
            inputs.aws-role-to-assume }}
          role-skip-session-tagging: true
          mask-aws-account-id: true
      - name: Read TF Output
        uses: actions/github-script@v7
        with:
          script: |
            output = JSON.parse(${{ steps.infra.outputs.tf-output-general}})

            for (const [key, value] of Object.entries(output)) {
                core.exportVariable(key, value)
            }
      - name: Deploy to S3
        run: aws s3 sync --delete ./dist/ $website_s3_bucket_arn
      - name: Create CloudFront invalidation
        run: aws cloudfront create-invalidation --distribution-id
          $cloudfront_distribution_id --paths "/*"
